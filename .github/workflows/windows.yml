name: Windows Build (Manual)

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            vcpkg_installed
            vcpkg/buildtrees
            vcpkg/downloads
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Install vcpkg dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install --triplet x64-windows-static
        shell: pwsh
        working-directory: ${{ github.workspace }}

      - name: Set VCPKG_ROOT environment variable
        run: echo "VCPKG_ROOT=$PWD/vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Download sciter.dll
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll" -OutFile "sciter.dll"
          mkdir -Force target/release
          Move-Item sciter.dll target/release/
        shell: pwsh

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ runner.os }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-build-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-build-${{ runner.os }}-

      - name: Debug Opus include path
        run: |
          dir vcpkg_installed\x64-windows-static\include
        shell: pwsh

      - name: Set OPUS_INCLUDE_DIR environment variable
        run: echo "OPUS_INCLUDE_DIR=$PWD/vcpkg_installed/x64-windows-static/include" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh
        working-directory: ${{ github.workspace }}

      - name: Build (release)
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-exe
          path: |
            target/x86_64-pc-windows-msvc/release/rustdesk.exe
            target/release/sciter.dll
