name: Windows Build (Manual)

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          # Paths are relative to the GITHUB_WORKSPACE
          path: |
            vcpkg/installed
            vcpkg/buildtrees
            vcpkg/downloads
          key: vcpkg-cache-${{ runner.os }}-${{ hashFiles('**/vcpkg.json', '.github/workflows/windows.yml') }}
          restore-keys: |
            vcpkg-cache-${{ runner.os }}-

      - name: Install vcpkg dependencies
        run: |
          $vcpkg_dir = "${{ github.workspace }}/vcpkg"
          if (-not (Test-Path "$vcpkg_dir/vcpkg.exe")) {
            git clone --depth 1 https://github.com/microsoft/vcpkg $vcpkg_dir
            & "$vcpkg_dir/bootstrap-vcpkg.bat" -disableMetrics
          }
          & "$vcpkg_dir/vcpkg.exe" install --triplet x64-windows-static --recurse --clean-after-build
        shell: pwsh
        working-directory: ${{ github.workspace }}

      - name: Set VCPKG_ROOT environment variable
        run: echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Download sciter.dll
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll" -OutFile "sciter.dll"
          mkdir -Force target/release
          Move-Item sciter.dll target/release/
        shell: pwsh

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ runner.os }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-build-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-build-${{ runner.os }}-

      - name: Debug Opus include path
        run: |
          $expected_include_path = "${{ github.workspace }}/vcpkg/installed/x64-windows-static/include"
          Write-Host "Checking Opus include path: $expected_include_path"
          Get-ChildItem $expected_include_path -ErrorAction SilentlyContinue
          Write-Host "Checking for opus subdirectory: $expected_include_path/opus"
          Get-ChildItem "$expected_include_path/opus" -ErrorAction SilentlyContinue
        shell: pwsh

      # The OPUS_INCLUDE_DIR environment variable is no longer explicitly set.
      # The magnum-opus build script should find Opus headers and libraries
      # using VCPKG_ROOT (set to ${{ github.workspace }}/vcpkg) and its default logic.
      - name: Build (release)
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-exe
          path: |
            target/x86_64-pc-windows-msvc/release/rustdesk.exe
            target/release/sciter.dll
